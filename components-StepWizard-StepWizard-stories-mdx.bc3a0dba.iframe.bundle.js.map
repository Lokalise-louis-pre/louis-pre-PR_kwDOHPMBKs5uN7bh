{"version":3,"file":"components-StepWizard-StepWizard-stories-mdx.bc3a0dba.iframe.bundle.js","mappings":";AA0CA;AACA;AACA;AACA;AACA;ACuBA;AACA;AAMA","sources":["webpack://@lokalise/louis/./src/components/StepWizard/components/HorizontalPageCounter/styles.ts","webpack://@lokalise/louis/./src/components/Input/styles.ts"],"sourcesContent":["import { css, modifier, styled } from '@lokalise/styled';\n\nimport { spacing, typography, value } from '../../../../utils/theme';\nimport { Button } from '../../../Button';\n\nexport const PageCounterContainer = styled.div`\n\twidth: 100%;\n\tposition: relative;\n\tmargin: ${spacing(4)} 0;\n`;\n\nexport const PagesContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: flex-start;\n\tjustify-content: space-evenly;\n`;\n\nexport const PageLabelContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: ${spacing(2)};\n\tz-index: 1;\n`;\n\nexport const PageNumber = styled(Button)<{ selected: boolean }>`\n\tborder-radius: 50%;\n\twidth: 30px;\n\theight: 30px;\n\n\t${typography('body.caption.default')};\n\tborder-color: ${value('color.border.default')};\n\tcolor: ${value('color.text.light.default')};\n\tbackground-color: ${value('color.background.surface.default')};\n\n\t${modifier(\n\t\t'selected',\n\t\tcss`\n\t\t\t${typography('body.caption.strong')};\n\t\t\tborder-color: ${value('color.border.active')};\n\t\t\tcolor: ${value('color.text.active')};\n\t\t\tbackground-color: ${value('color.background.active')};\n\t\t`,\n\t)}\n\n\t&:hover:not([disabled]):not([aria-expanded='true']) {\n\t\tborder-color: ${value('color.background.action.primary.hover')};\n\t\tbackground-color: ${value('color.background.action.primary.hover')};\n\t\tcolor: ${value('color.text.inverse')};\n\t}\n\n\t&:active:not([disabled]):not([aria-expanded='true']),\n\t&:focus:active:not([disabled]):not([aria-expanded='true']) {\n\t\tborder-color: ${value('color.background.action.primary.hover')};\n\t\tbackground-color: ${value('color.background.action.primary.hover')};\n\t\tcolor: ${value('color.text.inverse')};\n\t}\n\n\t&:disabled {\n\t\tbackground-color: ${value('color.background.disabled')};\n\t\tcolor: ${value('color.text.disabled')};\n\t\tborder-color: ${value('color.border.disabled')};\n\t}\n`;\n\nexport const PageLabel = styled.div`\n\ttext-align: center;\n\twidth: 100%;\n\t${typography('body.small.default')}\n`;\n\nexport const BackgroundLine = styled.div`\n\twidth: 100%;\n\theight: 1px;\n\tbackground: ${value('color.border.light')};\n\tposition: absolute;\n\tmargin-top: 14px;\n`;\n","import { css, excludeProps, modifier, styled } from '@lokalise/styled';\nimport type { InputHTMLAttributes } from 'react';\n\nimport { withInputContainerStyle, withInputFieldStyle, withInputSizeVariants } from '../../utils/styles';\nimport type { InputSizeVariants, InputStyleProps } from '../../utils/styles';\nimport { spacing, value } from '../../utils/theme';\nimport type { FlexProps } from '../Flex';\nimport { Flex } from '../Flex';\n\nexport const Container = styled.div`\n\twidth: 100%;\n\tdisplay: grid;\n\tgap: ${spacing(1)};\n\tgrid-template-columns: minmax(50px, 1fr); /* This ensures Input doesn't overflow 100% */\n`;\n\nexport const StyledInput = styled.input.withConfig({ shouldForwardProp: excludeProps(['error']) })<\n\tInputHTMLAttributes<HTMLInputElement> & InputStyleProps\n>`\n\t${withInputFieldStyle};\n\n\tborder: 0;\n\tmin-width: 50px;\n\twidth: 100%;\n\tpadding: 0;\n\tdisplay: block;\n`;\n\nexport const InputIcon = styled.div`\n\tline-height: 1;\n\tfont-size: 0;\n`;\n\ntype InputContainerProps = {\n\tinputSize: InputSizeVariants;\n\thasPrefix?: boolean;\n\thasSuffix?: boolean;\n\tdisabled?: boolean;\n\terror?: boolean;\n};\n\nexport const InputContainer = styled(Flex).withConfig({\n\tshouldForwardProp: excludeProps(['inputSize', 'hasPrefix', 'hasSuffix', 'disabled', 'error']),\n})<FlexProps & InputContainerProps>`\n\t${withInputContainerStyle};\n\t${withInputSizeVariants};\n\n\talign-items: center;\n\tpadding: ${spacing(0, 3)};\n\tcolor: ${value('color.text.input.placeholder')};\n\n\t&:focus-within,\n\t[data-dev-state='focus'] & {\n\t\tcolor: ${value('color.border.active')};\n\t}\n\n\t// All items should preserve their width\n\t> * {\n\t\tflex-shrink: 0;\n\t}\n\n\t// Except input\n\t> ${StyledInput} {\n\t\tflex-shrink: 1;\n\t}\n\n\t${modifier(\n\t\t'hasPrefix',\n\t\tcss`\n\t\t\tpadding-left: ${spacing(2)};\n\t\t`,\n\t)};\n\n\t${modifier(\n\t\t'hasSuffix',\n\t\tcss`\n\t\t\tpadding-right: ${spacing(2)};\n\t\t`,\n\t)};\n`;\n"],"names":[],"sourceRoot":""}