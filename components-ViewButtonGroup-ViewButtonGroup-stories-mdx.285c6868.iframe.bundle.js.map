{"version":3,"file":"components-ViewButtonGroup-ViewButtonGroup-stories-mdx.285c6868.iframe.bundle.js","mappings":";;;AAoCA;AACA;AACA;AAgBA;;;;;;;;;;ACtCA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAgBA;;;;;;AC1CA","sources":["webpack://@lokalise/louis/./src/components/ViewButtonGroup/styles.ts","webpack://@lokalise/louis/./src/components/Popover/styles.ts","webpack://@lokalise/louis/./src/foundations/icons/styles.ts"],"sourcesContent":["import { css, modifier, styled } from '@lokalise/styled';\n\nimport { value } from '../../utils/theme';\n\nexport const Container = styled.span`\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tpadding: 0 0 0 1px;\n`;\n\ninterface ButtonInterface {\n\t$selected: boolean;\n}\n\nexport const Button = styled.button<ButtonInterface>`\n\tposition: relative;\n\tdisplay: inline-block;\n\tpadding: 4px 7px 8px;\n\theight: 30px;\n\tz-index: 1;\n\tvertical-align: middle;\n\tmargin: 0 0 0 -1px;\n\tcursor: pointer;\n\n\tbackground: transparent;\n\tborder: 1px solid ${value('color.border.active')};\n\tfont-size: 20px;\n\tcolor: ${value('color.text.link.default')};\n\n\t${modifier(\n\t\t'$selected',\n\t\tcss`\n\t\t\tz-index: 2;\n\n\t\t\tbackground: ${value('color.background.action.primary.default')};\n\t\t\tcolor: ${value('color.text.inverse')};\n\t\t`,\n\t)}\n\n\t&:first-child {\n\t\tborder-radius: ${value('radius.m')} 0 0 ${value('radius.m')};\n\t}\n\t&:last-of-type {\n\t\tborder-radius: 0 ${value('radius.m')} ${value('radius.m')} 0;\n\t}\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${value('color.background.surface.fore')};\n\t\t${modifier(\n\t\t\t'$selected',\n\t\t\tcss`\n\t\t\t\tbackground: ${value('color.background.action.primary.default')};\n\t\t\t`,\n\t\t)};\n\t}\n`;\n","import type { Placement } from '@floating-ui/react';\nimport { css, excludeProps, styled, variants } from '@lokalise/styled';\nimport type { HTMLAttributes, RefAttributes } from 'react';\n\nimport { typography, value } from '../../utils/theme';\n\nconst bottom = css`\n\ttop: -5px;\n\n\t&::before {\n\t\tborder-left-width: 1px;\n\t\tborder-left-style: solid;\n\t\tborder-top-width: 1px;\n\t\tborder-top-style: solid;\n\t}\n`;\nconst top = css`\n\tbottom: -5px;\n\n\t&::before {\n\t\tborder-right-width: 1px;\n\t\tborder-right-style: solid;\n\t\tborder-bottom-width: 1px;\n\t\tborder-bottom-style: solid;\n\t}\n`;\nconst left = css`\n\tright: -5px;\n\n\t&::before {\n\t\tborder-right-width: 1px;\n\t\tborder-right-style: solid;\n\t\tborder-top-width: 1px;\n\t\tborder-top-style: solid;\n\t}\n`;\nconst right = css`\n\tleft: -5px;\n\n\t&::before {\n\t\tborder-left-width: 1px;\n\t\tborder-left-style: solid;\n\t\tborder-bottom-width: 1px;\n\t\tborder-bottom-style: solid;\n\t}\n`;\n\nexport type ArrowProps = {\n\tplacement?: Placement;\n} & HTMLAttributes<HTMLElement> &\n\tRefAttributes<HTMLElement>;\n\nexport const Arrow = styled.div.withConfig({ shouldForwardProp: excludeProps(['placement']) })<ArrowProps>`\n\tposition: absolute;\n\twidth: 8px;\n\theight: 8px;\n\tz-index: ${value('zIndex.hide')};\n\n\t&::before {\n\t\tposition: absolute;\n\t\twidth: 8px;\n\t\theight: 8px;\n\t\tz-index: ${value('zIndex.hide')};\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\ttransform: rotate(45deg);\n\t\tbackground-color: ${value('color.background.surface.default')};\n\t\tborder-color: ${value('color.border.default')};\n\t}\n\n\t${variants(\n\t\t'placement',\n\t\t{\n\t\t\ttop,\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tright,\n\t\t\t'right-end': right,\n\t\t\t'right-start': right,\n\t\t\t'left-start': left,\n\t\t\t'auto-end': css``,\n\t\t\t'auto-start': css``,\n\t\t\tauto: css``,\n\t\t\t'bottom-end': bottom,\n\t\t\t'bottom-start': bottom,\n\t\t\t'left-end': left,\n\t\t\t'top-end': top,\n\t\t\t'top-start': top,\n\t\t},\n\t\t'auto',\n\t)}\n`;\n\nexport const Content = styled.div<HTMLAttributes<HTMLElement>>`\n\tpadding: 0;\n\tborder-radius: ${value('radius.tooltip')};\n\tbackground-color: ${value('color.background.surface.default')};\n\tborder: 1px solid ${value('color.border.default')};\n\tbox-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n\tz-index: ${value('zIndex.popover')};\n\tcolor: ${value('color.text.default')};\n\t${typography('body.small.default')};\n\twidth: max-content;\n`;\n","import { css, styled } from '@lokalise/styled';\n\nconst commonStyles = css`\n\tpointer-events: all;\n\tbox-sizing: border-box;\n\tcolor: var(--louis-svgicon-color);\n\tfill: currentColor;\n\tfont-size: var(--louis-svgicon-size);\n`;\n\nexport const SvgRoot = styled.svg`\n\t${commonStyles};\n\twidth: 1em;\n\theight: 1em;\n`;\n"],"names":[],"sourceRoot":""}